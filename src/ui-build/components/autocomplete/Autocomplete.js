"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("../../_virtual/_tslib.js"),t=require("react/jsx-runtime"),s=require("react-select"),i=require("../typography/Typography.js"),r=require("../../constants/colors.js"),o=require("./Autocomplete.styled.js"),n=require("./Option.js"),a=require("./Input.js"),c=require("./IndicatorsContainer.js"),l=require("react");function d(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var p=d(s);const g=l.forwardRef(((s,l)=>{var{id:d,name:g,label:b,options:u,error:j,errorText:O,disabled:h,placeholder:m,styles:x,components:E}=s,R=e.__rest(s,["id","name","label","options","error","errorText","disabled","placeholder","styles","components"]);const T=d||g,y=Object.assign({container:(e,t)=>Object.assign(Object.assign({},e),t.isDisabled?{cursor:"not-allowed",opacity:.5,pointerEvents:"auto"}:{}),control:(e,t)=>Object.assign(Object.assign(Object.assign(Object.assign({},e),{boxShadow:"none",background:r.WHITE,borderColor:t.isFocused?r.GREEN_HIGHLIGHT:j?r.RED_ALERT:r.LINES,borderRadius:0,height:40}),t.isDisabled?{pointerEvents:"none"}:{}),{"&:hover":{borderColor:r.GREEN_HIGHLIGHT}}),placeholder:e=>Object.assign(Object.assign({},e),{color:j?r.RED_ALERT:r.GRAY,lineHeight:"24px",marginLeft:0,marginRight:0,top:"calc(50% + 1px)"}),valueContainer:e=>Object.assign(Object.assign({},e),{padding:"7px 12px",height:"100%"}),singleValue:e=>Object.assign(Object.assign({},e),{color:j?r.RED_ALERT:r.BLACK,lineHeight:"24px",marginLeft:0,top:"calc(50% + 1px)"}),input:e=>Object.assign(Object.assign({},e),{lineHeight:"24px",margin:0,padding:0,input:{minHeight:24}}),menu:e=>Object.assign(Object.assign({},e),{boxShadow:"none",background:r.WHITE_DARK,marginTop:0,borderTopLeftRadius:0,borderTopRightRadius:0}),menuList:e=>Object.assign(Object.assign({},e),{padding:0}),option:(e,t)=>Object.assign(Object.assign({},e),{backgroundColor:t.isFocused?r.GRAY_LIGHT:"transparent"})},x);return t.jsxs(o.Autocomplete,Object.assign({className:"TPSelect-root"},{children:[b&&t.jsx(o.Label,Object.assign({id:`${T}-label`,htmlFor:T},{children:t.jsx(i.Typography.Text,Object.assign({size:"mini",color:j?"red_alert":"gray"},{children:b}),void 0)}),void 0),t.jsx(p.default,Object.assign({ref:l,options:u,isClearable:!0,inputId:T,styles:y,maxMenuHeight:220,isDisabled:h,placeholder:m||"",components:Object.assign({IndicatorsContainer:c.IndicatorsContainer,Option:n.Option,Input:a.Input},E)},R),void 0),j&&O&&t.jsx(o.ErrorElement,Object.assign({id:`error-hint-${T}`,role:"alert",size:"mini",color:"red_alert"},{children:O}),void 0)]}),void 0)}));g.displayName="Autocomplete",exports.Autocomplete=g;
